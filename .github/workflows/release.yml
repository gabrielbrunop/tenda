name: Publish & Release

on:
  push:
    tags: ["v*"]

permissions:
  contents: write
  id-token: write
  packages: write

jobs:
  ensure-on-main:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - run: |
          git fetch origin main
          git merge-base --is-ancestor $GITHUB_SHA origin/main || {
            echo "::error::Tag must point at main"; exit 1; }

  build-binaries:
    needs: ensure-on-main
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
            pack: tar
          - os: macos-latest
            target: aarch64-apple-darwin
            ext: ""
            pack: tar
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""
            pack: tar
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: .exe
            pack: zip
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build release binary
        run: cargo build --release --package tenda --target ${{ matrix.target }}

      - name: Pack artifact
        run: |
          mkdir dist
          BIN=target/${{ matrix.target }}/release/tenda${{ matrix.ext }}
          cp "$BIN" dist/
          cd dist
          ARCHIVE="tenda-${{ matrix.target }}.${{ matrix.pack == 'zip' && 'zip' || 'tar.gz' }}"
          if [[ "${{ matrix.pack }}" == "zip" ]]; then
            7z a "$ARCHIVE" "tenda${{ matrix.ext }}"
          else
            tar -czf "$ARCHIVE" "tenda${{ matrix.ext }}"
          fi
          echo "ASSET=$ARCHIVE" >>"$GITHUB_ENV"
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.target }}
          path: dist/tenda-*

  publish-crates:
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - ensure-on-main
      - build-binaries
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install cargo-workspaces
        run: cargo install cargo-workspaces --locked

      - uses: Swatinem/rust-cache@v2

      - name: Dry-run publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          cargo workspaces publish \
            --from-git \
            --skip-published \
            --publish-interval 10 \
            --yes \
            --dry-run \
            --token "$CARGO_REGISTRY_TOKEN"

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          cargo workspaces publish \
            --from-git \
            --skip-published \
            --publish-interval 10 \
            --yes \
            --token "$CARGO_REGISTRY_TOKEN"

  github-release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - ensure-on-main
      - build-binaries
      - publish-crates
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create / update GitHub Release
        id: release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
